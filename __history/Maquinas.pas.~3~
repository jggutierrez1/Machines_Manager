unit Maquinas;

interface

uses
  Windows, Messages, SysUtils, Variants,
  Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, DBCtrls, Mask,
  ExtCtrls, ComCtrls, Buttons, GridsEh,
  DBGridEh, DB, DBCtrlsEh, PngBitBtn,
  PngSpeedButton, WideStrings, DBLookupEh, DBGridEhGrouping,
  ToolCtrlsEh, DBGridEhToolCtrls, DynVarsEh,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, DBAxisGridsEh, FireDAC.Phys.MySQL, FireDAC.Phys.MySQLDef, EhLibVCL, FireDAC.VCLUI.Wait;

type
  TfMaquinas = class(TForm)
    oDBNav: TDBNavigator;
    PageControl1: TPageControl;
    oDS_Maquinas: TDataSource;
    StatusBar1: TStatusBar;
    oBtnExit: TPngBitBtn;
    oBtnAbort: TPngBitBtn;
    oBtnSave: TPngBitBtn;
    oBtnFind: TPngBitBtn;
    oBtnDelete: TPngBitBtn;
    oBtnEdit: TPngBitBtn;
    oBtnNew: TPngBitBtn;
    oBtnPrint: TPngBitBtn;
    TabSheet1: TTabSheet;
    Label5: TLabel;
    Label3: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    oActivo: TDBCheckBox;
    oCodigo: TDBEdit;
    oID: TDBEdit;
    oFecha_Alta: TDBDateTimeEditEh;
    oFecha_Mof: TDBDateTimeEditEh;
    oDS_Denom: TDataSource;
    Label1: TLabel;
    Label2: TLabel;
    Label6: TLabel;
    oModelo: TDBEdit;
    Label7: TLabel;
    oGrid: TDBGridEh;
    oBtn_Denom: TPngSpeedButton;
    Label4: TLabel;
    oConection: TFDConnection;
    oMaquinaTC: TFDTable;
    oDenom: TFDTable;
    oMetros: TDBComboBox;
    oDenom_E: TDBLookupComboBox;
    oDenom_S: TDBLookupComboBox;
    oTipoMaq: TDBComboBoxEh;
    TabSheet2: TTabSheet;
    GroupBox1: TGroupBox;
    GroupBox2: TGroupBox;
    Label8: TLabel;
    DBNumberEditEh1: TDBNumberEditEh;
    Label10: TLabel;
    DBNumberEditEh2: TDBNumberEditEh;
    Label11: TLabel;
    Label12: TLabel;
    DBNumberEditEh3: TDBNumberEditEh;
    DBNumberEditEh4: TDBNumberEditEh;
    Label9: TLabel;
    DBNumberEditEh5: TDBNumberEditEh;
    Label13: TLabel;
    DBNumberEditEh6: TDBNumberEditEh;
    Label14: TLabel;
    Label15: TLabel;
    DBNumberEditEh7: TDBNumberEditEh;
    DBNumberEditEh8: TDBNumberEditEh;
    Label18: TLabel;
    Label19: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    procedure Action_Control(pOption: integer);
    procedure oBtnNewClick(Sender: TObject);
    procedure oBtnEditClick(Sender: TObject);
    procedure oBtnDeleteClick(Sender: TObject);
    procedure oBtnFindClick(Sender: TObject);
    procedure oBtnPrintClick(Sender: TObject);
    procedure oBtnSaveClick(Sender: TObject);
    procedure oBtnAbortClick(Sender: TObject);
    procedure oBtnExitClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure oBtn_DenomClick(Sender: TObject);
    procedure Activa_Objetos(bPar: boolean);
    procedure FormShow(Sender: TObject);
    procedure ResizeKit1ExitResize(Sender: TObject; XScale, YScale: Double);
    procedure oMaquinaTCAfterEdit(DataSet: TDataSet);
    procedure oMaquinaTCAfterInsert(DataSet: TDataSet);
    procedure oMaquinaTCBeforePost(DataSet: TDataSet);
  private
    { Private declarations }
    // oObjRez: TReziseCntl;
  public
    { Public declarations }
    Rs_Bookmark: TBookmark;
    iOpcion: integer;
    cCodReg: string;
  end;

var
  fMaquinas: TfMaquinas;

implementation

USES BuscarGenM2, Denominaciones, utilesV20;
{$R *.dfm}

procedure TfMaquinas.FormCreate(Sender: TObject);
begin
  // self.ResizeKit1.Enabled := utiles.Ctrl_Resize;
  // utiles.ResizeKit_DBGridEh_Prepare(self.DBGridEh1, oObjRez);
  freeandnil(oConection);

  self.PageControl1.ActivePageIndex := 0;
  self.oMaquinaTC.Connection := futilesV20.oPublicCnn;
  self.oDenom.Connection := futilesV20.oPublicCnn;
  // maqtc_tipomaq<>1 and
  self.oMaquinaTC.Filter := 'emp_id=' + SysUtils.QuotedStr(IntToStr(utilesV20.iId_Empresa));
  self.oMaquinaTC.Filtered := true;

  self.oDS_Denom.DataSet := oDenom;
  self.oDS_Denom.Enabled := true;
  self.oDenom.Active := true;

  self.oDS_Maquinas.DataSet := oMaquinaTC;
  self.oDS_Maquinas.Enabled := true;
  self.oMaquinaTC.Active := true;
end;

procedure TfMaquinas.FormShow(Sender: TObject);
begin
  self.Activa_Objetos(false);
  self.StatusBar1.Panels[0].Text := 'Servidor: ' + futilesV20.oPublicCnn.Params.Values['Server'] + '/' +
    futilesV20.oPublicCnn.Params.Values['Database'];
end;

procedure TfMaquinas.oBtnAbortClick(Sender: TObject);
begin
  self.oMaquinaTC.Cancel;
  self.Action_Control(7);
  self.Activa_Objetos(false);
  // self.oDenom.Filtered := false;
  self.oMaquinaTC.Refresh;
  case iOpcion of
    1:
      begin

      end;
    2:
      begin
        if self.oMaquinaTC.BookmarkValid(Rs_Bookmark) then
          self.oMaquinaTC.GotoBookmark(Rs_Bookmark);
      end;
  end;
  iOpcion := 0;
end;

procedure TfMaquinas.oBtnDeleteClick(Sender: TObject);
var
  nResp: integer;
begin
  if self.oMaquinaTC.isEmpty then
  begin
    self.Action_Control(6);
    exit;
  end;
  self.Action_Control(3);
  nResp := Application.MessageBox('Seguro desea borrar?', '', MB_YESNO);
  If (nResp = ID_YES) Then
  begin
    self.oDBNav.DataSource.DataSet.Delete;
    // self.oDBNav.DataSource.DataSet.Refresh;
  end;
end;

procedure TfMaquinas.oBtnEditClick(Sender: TObject);
begin
  iOpcion := 2;
  if self.oMaquinaTC.isEmpty then
  begin
    self.Action_Control(6);
    exit;
  end;
  self.PageControl1.ActivePageIndex := 0;
  self.oMaquinaTC.Edit;
  self.Action_Control(2);
  self.Activa_Objetos(true);
  Rs_Bookmark := oMaquinaTC.GetBookmark;
  self.oCodigo.SetFocus;
end;

procedure TfMaquinas.oBtnExitClick(Sender: TObject);
begin
  self.close;
end;

procedure TfMaquinas.oBtnFindClick(Sender: TObject);
begin
  if self.oMaquinaTC.isEmpty then
  begin
    self.Action_Control(6);
    exit;
  end;
  self.Action_Control(4);

  Application.CreateForm(TfBuscarGenM2, fBuscarGenM2);
  fBuscarGenM2.Hide;
  fBuscarGenM2.oLst_campos.Clear;

  BuscarGenM2.oListData[1].Texto := 'Código';
  BuscarGenM2.oListData[1].Campo := 'maqtc_cod';
  BuscarGenM2.oListData[1].LLave := true;

  BuscarGenM2.oListData[2].Texto := 'Nombre del Máquina';
  BuscarGenM2.oListData[2].Campo := 'maqtc_modelo';
  BuscarGenM2.oListData[2].LLave := false;

  fBuscarGenM2.oSql1.Clear;
  fBuscarGenM2.oSql1.Lines.Add('SELECT maqtc_cod,UCASE(maqtc_modelo) as maqtc_modelo FROM maquinastc WHERE emp_id=' +
    QuotedStr(IntToStr(utilesV20.iId_Empresa)));
  fBuscarGenM2.ShowModal;
  if trim(BuscarGenM2.vFindResult) <> '' then
    self.oDBNav.DataSource.DataSet.Locate('maqtc_cod', BuscarGenM2.vFindResult, []);
  freeandnil(fBuscarGenM2);
end;

procedure TfMaquinas.oBtnNewClick(Sender: TObject);
begin
  // self.oDenom.Filtered := true;
  iOpcion := 1;
  self.PageControl1.ActivePageIndex := 0;
  self.oMaquinaTC.Insert;
  self.Action_Control(1);
  self.Activa_Objetos(true);
  // self.oTipoMaq.KeyItems.Values := 1;
  self.oMaquinaTC.FieldByName('maqtc_tipomaq').Value := 1;
  self.oMaquinaTC.FieldByName('maqtc_inactivo').Value := 0;
  self.oActivo.Checked := false;
  // self.oMetros.ItemIndex := 0;
  self.oDenom.First;
  self.oCodigo.SetFocus;
end;

procedure TfMaquinas.oBtnPrintClick(Sender: TObject);
begin
  if self.oMaquinaTC.isEmpty then
  begin
    self.Action_Control(6);
    exit;
  end;
  self.Action_Control(5);
  ShowMessage('Opción aún no programada.');
end;

procedure TfMaquinas.oBtnSaveClick(Sender: TObject);
begin
  self.oMaquinaTC.post;
  self.Action_Control(6);
  self.Activa_Objetos(false);
  // self.oDenom.Filtered := false;
  self.oMaquinaTC.Refresh;
  case iOpcion of
    1:
      begin

      end;
    2:
      begin
        if self.oMaquinaTC.BookmarkValid(Rs_Bookmark) then
          self.oMaquinaTC.GotoBookmark(Rs_Bookmark);
      end;
  end;
  iOpcion := 0;
end;

procedure TfMaquinas.oBtn_DenomClick(Sender: TObject);
begin
  Application.CreateForm(TfDenom, fDenom);
  fDenom.ShowModal;
  fDenom.free;
  self.oDenom.Refresh;
end;

procedure TfMaquinas.oMaquinaTCAfterEdit(DataSet: TDataSet);
begin
  DataSet.FieldByName('emp_id').Value := utilesV20.iId_Empresa;
end;

procedure TfMaquinas.oMaquinaTCAfterInsert(DataSet: TDataSet);
begin
  DataSet.FieldByName('emp_id').Value := utilesV20.iId_Empresa;
end;

procedure TfMaquinas.oMaquinaTCBeforePost(DataSet: TDataSet);
begin
  if DataSet.State in [dsEdit, dsInsert] then
  begin
    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_modelo').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario el Modelo de la máquina');
      self.oModelo.SetFocus;
      abort;
    end;
    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_cod').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario el número de chapa/máquina');
      self.oCodigo.SetFocus;
      abort;
    end;

    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_metros').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario definir la cantidad de metros.');
      self.oMetros.SetFocus;
      abort;
    end;

    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_tipomaq').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario definir el tipo de maquina.');
      self.oTipoMaq.SetFocus;
      abort;
    end;

    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_denom_e').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario definir el tipo de entrada de metros.');
      self.oDenom_E.SetFocus;
      abort;
    end;
    if futilesV20.isEmpty(DataSet.FieldByName('maqtc_denom_s').AsString) then
    begin
      ShowMessage('Para crear un Máquina es necesario definir el tipo de salida de metros.');
      self.oDenom_S.SetFocus;
      abort;
    end;

    DataSet.FieldByName('emp_id').Value := utilesV20.iId_Empresa;
    // DataSet.FieldByName('maqtc_tipomaq').Value := 2;
    if DataSet.State = dsEdit then
    begin
      DataSet.FieldByName('u_usuario_modif').AsString := utilesV20.sUserName;
      DataSet.FieldByName('maqtc_fecha_modif').Value := now();
    end
    else if DataSet.State = dsInsert then
    begin
      DataSet.FieldByName('u_usuario_alta').AsString := utilesV20.sUserName;
      DataSet.FieldByName('maqtc_fecha_alta').Value := now();
    end;
    DataSet.FieldByName('maqtc_chapa').Value := DataSet.FieldByName('maqtc_cod').Value;
  end;
end;

procedure TfMaquinas.ResizeKit1ExitResize(Sender: TObject; XScale, YScale: Double);
begin
  // utiles.ResizeKit_DBGridEh(self.DBGridEh1, XScale, YScale, oObjRez);
end;

procedure TfMaquinas.Action_Control(pOption: integer);
begin
  if (pOption = 0) then
  begin
    oDBNav.Visible := true;
    oBtnNew.Visible := true;
    oBtnEdit.Visible := false;
    oBtnDelete.Visible := false;
    oBtnFind.Visible := false;
    oBtnPrint.Visible := false;
    oBtnExit.Enabled := true;
    oBtnSave.Top := oBtnNew.Top;
    oBtnSave.Left := oBtnNew.Left;

    oBtnAbort.Top := oBtnEdit.Top;
    oBtnAbort.Left := oBtnEdit.Left;

    oBtnAbort.Visible := false;
    oBtnSave.Visible := false;
    oBtnExit.Visible := true;

    oMetros.Enabled := false;
    oDenom_E.Enabled := false;
    oDenom_S.Enabled := false;
    oBtn_Denom.Enabled := false;

  end;

  if ((pOption = 1) or (pOption = 2)) then
  begin
    oDBNav.Visible := false;
    oBtnNew.Visible := false;
    oBtnEdit.Visible := false;
    oBtnDelete.Visible := false;
    oBtnFind.Visible := false;
    oBtnPrint.Visible := false;
    oBtnExit.Enabled := false;

    oBtnSave.Top := oBtnNew.Top;
    oBtnSave.Left := oBtnNew.Left;

    oBtnAbort.Top := oBtnEdit.Top;
    oBtnAbort.Left := oBtnEdit.Left;

    oBtnAbort.Visible := true;
    oBtnSave.Visible := true;
    oBtnExit.Visible := false;

    oMetros.Enabled := true;
    oDenom_E.Enabled := true;
    oDenom_S.Enabled := true;
    oBtn_Denom.Enabled := true;
  end;

  if ((pOption = 6) or (pOption = 7)) then
  begin
    oDBNav.Visible := true;
    oBtnNew.Visible := true;
    oBtnEdit.Visible := true;
    oBtnDelete.Visible := true;
    oBtnFind.Visible := true;
    oBtnPrint.Visible := false;
    oBtnExit.Enabled := true;
    oBtnSave.Top := oBtnNew.Top;
    oBtnSave.Left := oBtnNew.Left;

    oBtnAbort.Top := oBtnEdit.Top;
    oBtnAbort.Left := oBtnEdit.Left;

    oBtnAbort.Visible := false;
    oBtnSave.Visible := false;
    oBtnExit.Visible := true;

    oMetros.Enabled := false;
    oDenom_E.Enabled := false;
    oDenom_S.Enabled := false;
    oBtn_Denom.Enabled := false;
  end;
end;

procedure TfMaquinas.Activa_Objetos(bPar: boolean);
var
  i: Word;
begin
  for i := 0 to self.ComponentCount - 1 do
  begin
    if (self.Components[i] is TDBEdit) then
      TDBEdit(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBMemo) then
      TDBMemo(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBNumberEditEh) then
      TDBNumberEditEh(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBLookupComboBox) then
      TDBLookupComboBox(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBCheckBox) then
      TDBCheckBox(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TPngSpeedButton) then
      TPngSpeedButton(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBComboBox) then
      TDBComboBox(self.Components[i]).Enabled := bPar;
    if (self.Components[i] is TDBComboBoxEh) then
      TDBComboBoxEh(self.Components[i]).Enabled := bPar;
  end;
  self.oID.Enabled := false;
end;

end.
